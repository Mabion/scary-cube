{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`scary-cube`\n\nRubik's Cube implemented as web component based on lit-element.\n\nNeeds to be sized (best by fitting it into a parent element) to correctly display and scale.\n\nOrientation of cube can be changed with mouse and touch gestures.\n\nMoves need to be performed using the `addMove` or `addMoves` methods, using SiGN notation.\n\nColors of the cube can be changed using the following custom CSS properties, matching the sides of the cube\n\n```\nscary-cube {\n  --cube-color-u: white;\n  --cube-color-d: yellow;\n  --cube-color-f: green;\n  --cube-color-b: #3333FF;\n  --cube-color-l: orange;\n  --cube-color-r: red;\n}\n```\n\nAdditionaly the speed of the move animations can be adjusted with the `--cube-speed` parameter\n\n```\nscary-cube {\n  --cube-speed: 0.4s;\n}\n```",
      "summary": "",
      "path": "scary-cube.js",
      "properties": [
        {
          "name": "isSolved",
          "type": "Boolean",
          "description": "Returns true if the cube is in a solved state, i.e. each side has one color.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 314,
              "column": 2
            },
            "end": {
              "line": 325,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "faces",
          "type": "Array",
          "description": "Returns or sets the current state of the cube.\n\nThrows erros when trying to set an invalid state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 2
            },
            "end": {
              "line": 336,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        },
        {
          "name": "_faces",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 264,
              "column": 6
            },
            "end": {
              "line": 264,
              "column": 19
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "_scaleFactor",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 6
            },
            "end": {
              "line": 265,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_rotX",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 6
            },
            "end": {
              "line": 266,
              "column": 19
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_rotY",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 267,
              "column": 6
            },
            "end": {
              "line": 267,
              "column": 19
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "_moveClass",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 268,
              "column": 6
            },
            "end": {
              "line": 268,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "noFaceLabels",
          "type": "boolean | null | undefined",
          "description": "Disables the display of labels on the center faces.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "noGestures",
          "type": "boolean | null | undefined",
          "description": "Disables gesture events.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 6
            },
            "end": {
              "line": 286,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_viewportStyle",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 610,
              "column": 2
            },
            "end": {
              "line": 612,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "scaleFactor"
            }
          ]
        },
        {
          "name": "_cubeStyle",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 614,
              "column": 2
            },
            "end": {
              "line": 618,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rotX"
            },
            {
              "name": "rotY"
            },
            {
              "name": "scaleFactor"
            }
          ]
        },
        {
          "name": "_faceClasslist",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 620,
              "column": 2
            },
            "end": {
              "line": 622,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "face"
            },
            {
              "name": "v"
            },
            {
              "name": "h"
            },
            {
              "name": "color"
            }
          ]
        },
        {
          "name": "_resizeHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 629,
              "column": 2
            },
            "end": {
              "line": 645,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entries"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_trackHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 647,
              "column": 2
            },
            "end": {
              "line": 667,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "addMoves",
          "description": "Adds multiple moves to the queue of moves to be performed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 675,
              "column": 2
            },
            "end": {
              "line": 694,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "moves",
              "type": "(String | Array)",
              "description": "Array or space separated String of moves in SiGN notation"
            },
            {
              "name": "silent",
              "type": "Boolean",
              "description": "If true, the cube will not be animated for these moves"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "addMove",
          "description": "Adds a single move to the queue of moves to be performed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 702,
              "column": 2
            },
            "end": {
              "line": 715,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "move",
              "type": "String",
              "description": "Move to perform in SiGN notation"
            },
            {
              "name": "silent",
              "type": "Boolean",
              "description": "If true, the cube will not be animated for this move"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setOrientation",
          "description": "Sets the orientation of the cube.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 723,
              "column": 2
            },
            "end": {
              "line": 726,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rotX",
              "type": "Number",
              "description": "Rotation around x-axis as value between -180° and +180°"
            },
            {
              "name": "rotY",
              "type": "Number",
              "description": "Rotation around y-axis as value between -180° and +180°"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "reset",
          "description": "Reset the cube to its solved state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 731,
              "column": 2
            },
            "end": {
              "line": 738,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_performMove",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 752,
              "column": 2
            },
            "end": {
              "line": 830,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_transitionHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 832,
              "column": 2
            },
            "end": {
              "line": 839,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 260,
          "column": 0
        },
        "end": {
          "line": 840,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ScaryCube",
      "attributes": [
        {
          "name": "no-face-labels",
          "description": "Disables the display of labels on the center faces.",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-gestures",
          "description": "Disables gesture events.",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 6
            },
            "end": {
              "line": 286,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "cube-solved",
          "description": "Fired when the cube has been solved",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "move-finished",
          "description": "Fired when a move has finished",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "scary-cube"
    }
  ]
}
